AWSTemplateFormatVersion: 2010-09-09
Resources:
    QadleVPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: 192.168.0.0/16
            EnableDnsSupport: true
            EnableDnsHostnames: true
            InstanceTenancy: default
            Tags:
                - Key: Name
                  Value: Qadle-VPC-Prod
                - Key: Environment
                  Value: Prod


    PublicSubnet:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref QadleVPC
            CidrBlock: 192.168.1.0/24
            AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ from the list
            Tags:
                - Key: Name
                  Value: Qadle-Public-Subnet-A
                - Key: Environment
                  Value: Prod


    PrivateSubnet:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref QadleVPC
            CidrBlock: 192.168.2.0/24
            AvailabilityZone: !Select [ 0, !GetAZs ]    # Get the first AZ from the list
            Tags:
                - Key: Name
                  Value: Qadle-Private-Subnet-A
                - Key: Environment
                  Value: Prod


    # Our VPC will need internet access:     
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        DependsOn: QadleVPC
    

    VPCGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref QadleVPC
            InternetGatewayId: !Ref InternetGateway


    NATGateway:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt ElasticIPAddress.AllocationId
            SubnetId: !Ref PublicSubnet
            Tags:
                - Key: Name
                  Value: !Sub NAT-${AWS::StackName}


    ElasticIPAddress:
        Type: AWS::EC2::EIP
        Properties:
            Domain: VPC



    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref QadleVPC
            Tags:
                - Key: Name
                  Value: Public


    # Public route table has direct routing to IGW
    PublicRoute1:
        Type: AWS::EC2::Route
        DependsOn: VPCGatewayAttachment
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway


    PublicSubnetRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnet
            RouteTableId: !Ref PublicRouteTable


    # Private route table can access web via NAT (created below)
    PrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            # Route traffic through the NAT Gateway:
            NatGatewayId: !Ref NATGateway


    PrivateRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref QadleVPC
            Tags:
                - Key: Name
                  Value: Private


    PrivateSubnetRouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PrivateSubnet
            RouteTableId: !Ref PrivateRouteTable

